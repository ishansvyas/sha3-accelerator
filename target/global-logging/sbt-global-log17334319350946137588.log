[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\isv4\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\isv4\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Oracle Corporation Java 17.0.13)
[debug]       Load.loadUnit: plugins took 89.9781ms
[debug]       Load.loadUnit: defsScala took 0.2373ms
[debug] [Loading] Scanning directory C:\Users\isv4\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isv4\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.3595 ms
[debug]           Load.resolveProject(global-plugins) took 32.0695ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\isv4\.sbt\1.0\plugins, plugins: List(<none>))) took 74.9041ms
[debug] [Loading] Done in C:\Users\isv4\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 96.0607ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1377ms
[debug]     Load.loadUnit(file:/C:/Users/isv4/.sbt/1.0/plugins/, ...) took 196.1667ms
[debug]   Load.apply: load took 335.5825ms
[debug]   Load.apply: resolveProjects took 4.3929ms
[debug]   Load.apply: finalTransforms took 67.4001ms
[debug]   Load.apply: config.delegates took 19.7523ms
[debug]   Load.apply: Def.make(settings)... took 709.2633ms
[debug]   Load.apply: structureIndex took 165.5589ms
[debug]   Load.apply: mkStreams took 5.8256ms
[info] loading global plugins from C:\Users\isv4\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4557.774ms
[debug]           Load.loadUnit: plugins took 50.4376ms
[debug]           Load.loadUnit: defsScala took 0.0098ms
[debug] [Loading] Scanning directory C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1\project
[debug]             Load.loadUnit: mkEval took 5.3531ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.0702 ms
[info] loading settings for project cs557-lab1-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(cs557-lab1-build) took 5.1105ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs557-lab1-build, base: C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1\project, plugins: List(<none>))) took 12.171ms
[debug] [Loading] Done in C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1\project, returning: (cs557-lab1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4794.8272ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.7749ms
[debug]         Load.loadUnit(file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab1/project/, ...) took 4857.1494ms
[debug]       Load.apply: load took 4859.6449ms
[debug]       Load.apply: resolveProjects took 0.2307ms
[debug]       Load.apply: finalTransforms took 21.642ms
[debug]       Load.apply: config.delegates took 0.3694ms
[debug]       Load.apply: Def.make(settings)... took 129.4376ms
[debug]       Load.apply: structureIndex took 39.3836ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7766.5186ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1
[debug]       Load.loadUnit: mkEval took 0.2476ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.617 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 161.7563ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1, plugins: List(<none>))) took 168.455ms
[debug] [Loading] Done in C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2223.8628ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.0907ms
[debug]   Load.loadUnit(file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab1/, ...) took 10009.4587ms
[debug] Load.apply: load took 10011.9677ms
[debug] Load.apply: resolveProjects took 0.0904ms
[debug] Load.apply: finalTransforms took 39.2098ms
[debug] Load.apply: config.delegates took 0.2051ms
[debug] Load.apply: Def.make(settings)... took 60.9741ms
[debug] Load.apply: structureIndex took 37.3475ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to cs590-lab1 (in build file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52810 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52810, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to cs590-lab1 (in build file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab1/)
[debug] > Exec(idea-shell, None, None)
